name: deploy (local)

on:
  workflow_dispatch:
    inputs:
      type:
        type: choice
        required: true
        default: latest
        description: "Versioning type"
        options:
          - "latest"
          - "manual"
      version:
        type: string
        required: false
        description: "Version to set"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3
      - name: "Let Image-Version"
        id: image_version
        run: |
          if [[ "${{ inputs.type }}" == "manual" ]]; then
            echo "version=ghcr.io/egoavara/authz:${{ inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=ghcr.io/egoavara/authz:latest" >> "$GITHUB_OUTPUT"
          fi
      - name: "Setup Terraform variables"
        run: |
          echo 'gcp_project = "${{ secrets.GCP_PROJECT }}"'                           >> ./config.tfvars
          echo 'gcp_region = "${{ vars.GCP_REGION }}"'                                >> ./config.tfvars
          echo 'gcp_zone = "${{ vars.GCP_ZONE }}"'                                    >> ./config.tfvars

          echo "kubernetes_config_path = \"$KUBECONFIG\""                             >> ./config.tfvars
          echo "kubernetes_config_context = \"$(kubectl config current-context)\""    >> ./config.tfvars

          echo 'keycloak_url = "${{ vars.KEYCLOAK_URL }}"'                            >> ./config.tfvars
          echo 'keycloak_admin_username = "${{ secrets.KEYCLOAK_ADMIN_USERNAME }}"'   >> ./config.tfvars
          echo 'keycloak_admin_password = "${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}"'   >> ./config.tfvars

          echo 'postgres_host = "${{vars.POSTGRES_HOST}}"'                            >> ./config.tfvars
          echo 'postgres_port = ${{vars.POSTGRES_PORT}}'                              >> ./config.tfvars
          echo 'postgres_database = "${{ vars.POSTGRES_DATABASE }}"'                  >> ./config.tfvars
          echo 'postgres_username = "${{ secrets.POSTGRES_USERNAME }}"'               >> ./config.tfvars
          echo 'postgres_password = "${{ secrets.POSTGRES_PASSWORD }}"'               >> ./config.tfvars

          echo 'graphql_image = "${{ steps.image_version.outputs.version }}"'         >> ./config.tfvars

          echo 'graphql_static_ip_name = "${{ secrets.GRAPHQL_STATIC_IP_NAME }}"'     >> ./config.tfvars
      - name: "Terraform Apply"
        run: |
          # 
          cd .deploy
          #          
          terraform init
          terraform apply -var-file ../config.tfvars -auto-approve