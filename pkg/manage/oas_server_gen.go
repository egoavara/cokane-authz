// Code generated by ogen, DO NOT EDIT.

package manage

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetRaftNode implements getRaftNode operation.
	//
	// Get raft node information.
	//
	// GET /raft/node
	GetRaftNode(ctx context.Context, params GetRaftNodeParams) (*GetRaftNodeOK, error)
	// JoinRaftCluster implements joinRaftCluster operation.
	//
	// Join a raft cluster.
	//
	// POST /raft/node
	JoinRaftCluster(ctx context.Context, req *RaftBaseNode) (*RaftMetaNode, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
